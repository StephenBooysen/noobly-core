"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStringTest = void 0;
var convertWildcardToRegex_1 = require("./convertWildcardToRegex");
var escapeRegexString_1 = require("./escapeRegexString");
var parseRegex_1 = require("./parseRegex");
var createRegexTest = function (regexCache, regex) {
    var rule;
    if (regexCache[regex]) {
        rule = regexCache[regex];
    }
    else {
        rule = regexCache[regex] = (0, parseRegex_1.parseRegex)(regex);
    }
    return function (subject) {
        var _a, _b;
        return (_b = (_a = subject.match(rule)) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : false;
    };
};
var createStringTest = function (regexCache, ast) {
    if (ast.type !== 'Tag') {
        throw new Error('Expected a tag expression.');
    }
    var expression = ast.expression;
    if (expression.type === 'RangeExpression') {
        throw new Error('Unexpected range expression.');
    }
    if (expression.type === 'RegexExpression') {
        return createRegexTest(regexCache, expression.value);
    }
    if (expression.type !== 'LiteralExpression') {
        throw new Error('Expected a literal expression.');
    }
    var value = String(expression.value);
    if (value.includes('*') && expression.quoted === false) {
        return createRegexTest(regexCache, String((0, convertWildcardToRegex_1.convertWildcardToRegex)(value)) + (expression.quoted ? 'u' : 'ui'));
    }
    else {
        return createRegexTest(regexCache, '/(' + (0, escapeRegexString_1.escapeRegexString)(value) + ')/' + (expression.quoted ? 'u' : 'ui'));
    }
};
exports.createStringTest = createStringTest;
